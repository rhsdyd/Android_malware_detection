import pandas as pd
import json
import argparse
from sklearn.model_selection import KFold
import classifiers_kfold
import sys
import os

sys.path.append(os.path.dirname(os.path.abspath(os.path.dirname(__file__))))
from db import connect_to_db
from db import get_database_name
from feature_selection import helper


def main():
    parser = argparse.ArgumentParser()

    parser.add_argument("--outputCSV", default=False, action="store_true", help="output CSV",
                        required=False)
    parser.add_argument("--outputDB", default=False, action="store_true", help="output DB",
                        required=False)
    args = parser.parse_args()

    conn = connect_to_db()
    db = conn.get_database(get_database_name())
    total_fs = helper.fetch_all(db)

    data = total_fs.drop(['label'], axis='columns')
    label = total_fs['label']

    kfold = KFold(n_splits=10, shuffle=True, random_state=11)

    svm_accuracy, svm_precision, svm_recall, svm_f1 = classifiers_kfold.svm_10_fold(data, label, kfold)
    xgb_accuracy, xgb_precision, xgb_recall, xgb_f1 = classifiers_kfold.xgb_10_fold(data, label, kfold)
    dnn_accuracy, dnn_precision, dnn_recall, dnn_f1 = classifiers_kfold.dnn_10_fold(data, label, kfold)

    result_df = pd.DataFrame({'machine_learning': ['svm', 'xgboost', 'dnn'],
                              'accuracy': [svm_accuracy, xgb_accuracy, dnn_accuracy],
                              'precision': [svm_precision, xgb_precision, dnn_precision],
                              'recall': [svm_recall, xgb_recall, dnn_recall],
                              'f1': [svm_f1, xgb_f1, dnn_f1]})
    mat_name = "all_feature_eval"
    if args.outputDB:
        print('db: ', mat_name)
        col = db.get_collection(mat_name)
        col.insert_many(json.loads(result_df.to_json(orient='records', default_handler=str)))

    if args.outputCSV:
        print('csv: ', mat_name)
        result_df.to_csv('csv_results/' + mat_name + '.csv', index=False)


if __name__ == "__main__":
    main()
