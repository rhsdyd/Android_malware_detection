import numpy as np
import pandas as pd

def entropy(label):
    elements, counts = np.unique(label, return_counts = True)
    entropy = -np.sum([(counts[i]/np.sum(counts))*np.log2(counts[i]/np.sum(counts)) for i in range(len(elements))])
    return entropy


def InfoGain(data):
    # total_entropy_cal
    total_entropy = entropy(data['label'])
    # print('Entropy(D) = ', total_entropy)

    result = []
    # conditional_entropy_cal
    for col in data[data.columns.difference(['label'])].columns:
        values, counts = np.unique(data[col], return_counts=True)
        con_Entropy = np.sum([(counts[i] / np.sum(counts)) *
                              entropy(data.where(data[col] == values[i]).dropna()['label'])
                              for i in range(len(values))])
        # print('H(', col, ') = ', con_Entropy)

        Information_Gain = total_entropy - con_Entropy
        print('IG(', col, ') = ', Information_Gain)

        result.append(Information_Gain)

    return pd.DataFrame({'features': data[data.columns.difference(['label'])].columns,
                         'IG': result})